name: 🔍 Code Audit & GitHub Pages

on:
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']
  schedule:
    - cron: '17 */12 * * *' # cada 12h
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  audit:
    name: 🔍 Code Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build all packages
        run: pnpm run build

      - name: 🔍 Type check all packages
        run: pnpm run type-check

      - name: 🧹 Lint all packages
        run: pnpm run lint

      - name: 🧪 Test all packages
        run: pnpm run test

      - name: 📊 Generate coverage report
        id: coverage
        run: |
          echo "Generating coverage report..."
          pnpm --filter @facturacion/web test --coverage --passWithNoTests
          if [ -f "apps/web/coverage/coverage-final.json" ]; then
            mkdir -p coverage
            cp apps/web/coverage/coverage-final.json coverage/
            echo "Coverage report generated successfully"
          else
            echo "No coverage report found, creating empty one"
            mkdir -p coverage
            echo '{"total": 0, "covered": 0}' > coverage/coverage-final.json
          fi
        continue-on-error: true

      - name: 📈 Generate git metrics
        id: metrics
        run: |
          echo "Generating git metrics..."
          if [ -f "scripts/metrics_git.py" ]; then
            python3 scripts/metrics_git.py --window-days 90 --out metrics.json
            echo "Git metrics generated successfully"
          else
            echo "Metrics script not found, creating default metrics"
            echo '{"commits": 0, "contributors": 0, "lines_added": 0, "lines_deleted": 0}' > metrics.json
          fi
        continue-on-error: true

      - name: 📄 Prepare static site
        id: prepare-site
        run: |
          echo "Preparing static site..."
          mkdir -p public/data
          cp metrics.json public/data/
          if [ -f "coverage/coverage-final.json" ]; then
            cp coverage/coverage-final.json public/data/
          fi
          echo "Static site prepared successfully"

      - name: 📤 Upload Pages artifact
        id: upload-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    if: github.event_name != 'pull_request'
    needs: audit
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
