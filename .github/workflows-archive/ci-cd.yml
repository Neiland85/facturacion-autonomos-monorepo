name: 🚀 Simplified CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  basic-check:
    name: 🔍 Basic Check
    runs-on: ubuntu-latest

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: ⚙️ Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@8.15.0 --activate

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Type check
        run: pnpm type-check

      - name: 🧹 Lint check
        run: pnpm lint

      - name: 🧪 Test all packages
        run: pnpm test

      - name: 🏗️ Build all packages
        run: pnpm build

      - name: 🎉 Success notification
        run: echo "✅ All checks passed successfully!"

  docker-build:
    name: 🐳 Build Docker Images
    runs-on: ubuntu-latest
    needs: basic-check
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build Invoice Service
        uses: docker/build-push-action@v5
        with:
          context: ./apps/invoice-service
          file: ./apps/invoice-service/docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-invoice-service:latest
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-invoice-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build Auth Service
        uses: docker/build-push-action@v5
        with:
          context: ./apps/auth-service
          file: ./apps/auth-service/docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-auth-service:latest
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-auth-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build API Gateway
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api-gateway
          file: ./apps/api-gateway/docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-api-gateway:latest
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-api-gateway:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build Tax Calculator
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api-tax-calculator
          file: ./apps/api-tax-calculator/docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-tax-calculator:latest
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-tax-calculator:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🏗️ Build Web App
        uses: docker/build-push-action@v5
        with:
          context: ./apps/web
          file: ./apps/web/docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-web:latest
            ${{ secrets.DOCKER_USERNAME }}/tributariapp-web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: basic-check

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: ⚙️ Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@8.15.0 --activate

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🛡️ Run security audit
        run: pnpm audit --audit-level moderate

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: 📤 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  deploy-notification:
    name: 📢 Deploy Notification
    runs-on: ubuntu-latest
    needs: [basic-check, docker-build]
    if: always()

    steps:
      - name: 📁 Checkout code
        uses: actions/checkout@v4

      - name: 🎯 Deployment Status
        run: |
          if [ "${{ needs.basic-check.result }}" == "success" ] && [ "${{ needs.docker-build.result }}" == "success" ]; then
            echo "✅ All checks and builds passed successfully!"
            echo "🚀 Ready for deployment"
          else
            echo "❌ Some checks failed"
            echo "🔍 Check the logs for details"
            exit 1
          fi
