name: 🚀 CI/CD Pipeline - Netlify Deployment

on:
  push:
    branches: [main, develop, feat/*]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  NPM_VERSION: '10'

jobs:
  # ✅ Job de Testing y Linting
  test-and-lint:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install root dependencies
        run: npm install --legacy-peer-deps

      - name: 📦 Install web dependencies
        run: cd apps/web && npm install --legacy-peer-deps

      - name: 🔍 Lint code
        run: cd apps/web && npm run lint

      - name: 🔍 Type check
        run: cd apps/web && npm run type-check

      - name: 🧪 Run tests
        run: cd apps/web && npm run test

      - name: 🏗️ Build project
        run: cd apps/web && npm run build

  # ✅ Job de Build para Netlify
  build-netlify:
    name: 🏗️ Build for Netlify
    runs-on: ubuntu-latest
    needs: test-and-lint
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: cd apps/web && npm install --legacy-peer-deps

      - name: 🏗️ Build for production
        run: cd apps/web && npm run build:netlify
        env:
          NODE_ENV: production
          SWC_BINARY_TARGET: "x86_64-unknown-linux-gnu"
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: netlify-build
          path: apps/web/.next/
          retention-days: 1

  # 🚀 Netlify Deployment Job
  deploy-netlify:
    name: 🚀 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [test-and-lint, build-netlify]
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: cd apps/web && npm install --legacy-peer-deps

      - name: 🏗️ Build for Netlify
        run: cd apps/web && npm run build:netlify
        env:
          NODE_ENV: production
          SWC_BINARY_TARGET: "x86_64-unknown-linux-gnu"
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}

      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: 'apps/web/.next'
          production-branch: 'main'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: |
            Deploy from GitHub Actions
            ${{ github.event.head_commit.message }}
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # 🔐 Security Scanning Job
  security-scan:
    name: 🔐 Security Audit
    runs-on: ubuntu-latest
    needs: [test-and-lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔍 Run security audit
        run: cd apps/web && npm audit --audit-level=high

      - name: 🛡️ Run dependency check
        run: cd apps/web && npm outdated || true
