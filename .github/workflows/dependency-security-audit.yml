name: üîê Security Dependency Audit

on:
  schedule:
    # Ejecutar todos los lunes a las 8:00 AM UTC
    - cron: '0 8 * * 1'
  push:
    branches: [main, develop]
    paths:
      - 'package*.json'
      - 'yarn.lock'
      - 'pnpm-lock.yaml'
      - '**/package*.json'
  pull_request:
    branches: [main, develop]
    paths:
      - 'package*.json'
      - 'yarn.lock'
      - 'pnpm-lock.yaml'
      - '**/package*.json'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Forzar actualizaci√≥n de dependencias'
        required: false
        default: false
        type: boolean

jobs:
  dependency-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: read
      security-events: write
      issues: write
      pull-requests: write

    steps:
      - name: üì• Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Instalar dependencias
        run: npm ci

      - name: üîç Ejecutar auditor√≠a de seguridad
        run: |
          chmod +x scripts/dependency-security-audit.sh
          ./scripts/dependency-security-audit.sh
        continue-on-error: true

      - name: üìä Ejecutar npm audit
        id: npm-audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true
          echo "audit-results<<EOF" >> $GITHUB_OUTPUT
          cat audit-results.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: üìã Verificar dependencias desactualizadas
        id: outdated
        run: |
          npm outdated --json > outdated.json || true
          echo "outdated-results<<EOF" >> $GITHUB_OUTPUT
          cat outdated.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: üîí Verificar paquetes de alto riesgo
        id: risky-packages
        run: |
          echo "Verificando paquetes de alto riesgo..."
          risky_found=""

          risky_packages=("xml-crypto" "node-forge" "tesseract.js" "request" "moment")

          for package in "${risky_packages[@]}"; do
            if npm list "$package" >/dev/null 2>&1; then
              version=$(npm list "$package" --depth=0 2>/dev/null | grep "$package" | sed 's/.*@//' | sed 's/ .*//' || echo "unknown")
              risky_found="${risky_found}$package@$version "
            fi
          done

          echo "risky-packages=$risky_found" >> $GITHUB_OUTPUT

      - name: üìÑ Generar reporte de seguridad
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Leer resultados de auditor√≠a
            let auditResults = {};
            try {
              const auditData = fs.readFileSync('audit-results.json', 'utf8');
              auditResults = JSON.parse(auditData);
            } catch (e) {
              console.log('No se pudieron leer los resultados de auditor√≠a');
            }

            // Leer dependencias desactualizadas
            let outdatedResults = {};
            try {
              const outdatedData = fs.readFileSync('outdated.json', 'utf8');
              outdatedResults = JSON.parse(outdatedData);
            } catch (e) {
              console.log('No se pudieron leer las dependencias desactualizadas');
            }

            // Contar vulnerabilidades
            const vulns = auditResults.metadata?.vulnerabilities || {};
            const totalVulns = vulns.total || 0;
            const criticalVulns = vulns.critical || 0;
            const highVulns = vulns.high || 0;
            const moderateVulns = vulns.moderate || 0;
            const lowVulns = vulns.low || 0;

            // Contar paquetes desactualizados
            const outdatedCount = Object.keys(outdatedResults).length;

            // Paquetes de riesgo
            const riskyPackages = '${{ steps.risky-packages.outputs.risky-packages }}';

            // Generar reporte
            const report = `# üîê Reporte de Auditor√≠a de Seguridad

            **Fecha:** ${new Date().toISOString()}
            **Commit:** ${context.sha.substring(0, 8)}
            **Branch:** ${context.ref.replace('refs/heads/', '')}

            ## üìä Resumen de Vulnerabilidades

            | Severidad | Cantidad |
            |-----------|----------|
            | üö® Cr√≠ticas | ${criticalVulns} |
            | ‚ö†Ô∏è Altas | ${highVulns} |
            | üìä Moderadas | ${moderateVulns} |
            | ‚ÑπÔ∏è Bajas | ${lowVulns} |
            | **Total** | **${totalVulns}** |

            ## üì¶ Estado de Dependencias

            - **Paquetes desactualizados:** ${outdatedCount}
            - **Paquetes de alto riesgo detectados:** ${riskyPackages || 'Ninguno'}

            ## üéØ Puntuaci√≥n de Seguridad

            ${(() => {
              const score = Math.max(0, 100 - (criticalVulns * 25) - (highVulns * 10) - (moderateVulns * 5) - (lowVulns * 1));
              if (score >= 90) return `üü¢ **${score}/100** - Excelente estado de seguridad`;
              if (score >= 70) return `üü° **${score}/100** - Buen estado, mejoras recomendadas`;
              if (score >= 50) return `üü† **${score}/100** - Estado regular, se requieren mejoras`;
              return `üî¥ **${score}/100** - Estado cr√≠tico, acci√≥n inmediata requerida`;
            })()}

            ## üí° Recomendaciones

            ${totalVulns > 0 ? `
            ### üö® Vulnerabilidades Detectadas
            - Ejecutar: \`npm audit fix\`
            - Revisar manualmente vulnerabilidades cr√≠ticas y altas
            - Considerar actualizar dependencias principales
            ` : '‚úÖ No se detectaron vulnerabilidades'}

            ${outdatedCount > 5 ? `
            ### üì¶ Dependencias Desactualizadas
            - Ejecutar: \`npm update\`
            - Revisar: \`npm outdated\`
            - Planificar actualizaciones major para pr√≥ximo sprint
            ` : ''}

            ${riskyPackages ? `
            ### ‚ö†Ô∏è Paquetes de Alto Riesgo
            Los siguientes paquetes requieren atenci√≥n especial:
            ${riskyPackages.split(' ').filter(p => p).map(p => `- ${p}`).join('\n')}

            Considera migrar a alternativas m√°s seguras y mantenidas.
            ` : ''}

            ## üîó Enlaces √ötiles

            - [npm audit docs](https://docs.npmjs.com/cli/v8/commands/npm-audit)
            - [Snyk Vulnerability Database](https://snyk.io/vuln/)
            - [GitHub Security Advisories](https://github.com/advisories)
            `;

            // Guardar reporte
            fs.writeFileSync('security-report.md', report);

            // Determinar si fall√≥ la auditor√≠a
            const shouldFail = criticalVulns > 0 || highVulns > 0;
            core.setOutput('security-failed', shouldFail);
            core.setOutput('security-score', Math.max(0, 100 - (criticalVulns * 25) - (highVulns * 10) - (moderateVulns * 5) - (lowVulns * 1)));

      - name: üì§ Subir reporte como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: |
            security-report.md
            audit-results.json
            outdated.json
          retention-days: 30

      - name: üí¨ Comentar en PR (si aplica)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');

            // Buscar comentario existente
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('üîê Reporte de Auditor√≠a de Seguridad')
            );

            if (botComment) {
              // Actualizar comentario existente
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: report
              });
            } else {
              // Crear nuevo comentario
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: report
              });
            }

      - name: üö® Crear issue si hay vulnerabilidades cr√≠ticas
        if: steps.npm-audit.outputs.audit-results != '' && contains(steps.npm-audit.outputs.audit-results, '"critical"')
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'üö® Vulnerabilidades Cr√≠ticas Detectadas';
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');

            // Verificar si ya existe un issue similar
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,critical'
            });

            const existingIssue = issues.data.find(issue => issue.title.includes('Vulnerabilidades Cr√≠ticas'));

            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: `${report}\n\n---\n**Acci√≥n requerida:** Este issue se cre√≥ autom√°ticamente debido a vulnerabilidades cr√≠ticas detectadas.`,
                labels: ['security', 'critical', 'automated']
              });
            }

      - name: ‚ùå Fallar si hay vulnerabilidades cr√≠ticas
        if: contains(steps.npm-audit.outputs.audit-results, '"critical"')
        run: |
          echo "üö® Se detectaron vulnerabilidades cr√≠ticas - fallando el workflow"
          exit 1
