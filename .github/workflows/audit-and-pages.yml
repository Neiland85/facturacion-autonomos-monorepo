name: Code Audit & Pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "17 */12 * * *"  # cada 12h
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  FRONTEND_DIR: frontend
  BACKEND_DIR: backend
  COV_MIN: "85"
  # Benchmarks por defecto (puedes sobrescribirlos con Variables de Repositorio)
  SP_COMMITS_WK: ${{ vars.SP_COMMITS_WK || '10' }}
  EU_COMMITS_WK: ${{ vars.EU_COMMITS_WK || '11' }}
  US_COMMITS_WK: ${{ vars.US_COMMITS_WK || '12' }}
  SP_TIME_BETWEEN_H: ${{ vars.SP_TIME_BETWEEN_H || '12' }}
  EU_TIME_BETWEEN_H: ${{ vars.EU_TIME_BETWEEN_H || '11' }}
  US_TIME_BETWEEN_H: ${{ vars.US_TIME_BETWEEN_H || '10' }}

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python tools
        run: pip install -U ruff black mypy pytest pytest-cov bandit pip-audit cyclonedx-bom

      - name: Backend audit (lint/type/tests/coverage/security)
        run: |
          if [ -d "$BACKEND_DIR" ]; then
            ruff check "$BACKEND_DIR"
            mypy "$BACKEND_DIR"
            pytest --cov="$BACKEND_DIR" --cov-report=term-missing --cov-report=xml:coverage.xml
            python3 scripts/coverage_gate.py coverage.xml "$COV_MIN"
            python3 scripts/coverage_to_json.py coverage.xml coverage.json
            bandit -q -r "$BACKEND_DIR" -f json -o bandit.json
            pip-audit -f json -o pip_audit.json || true
            cyclonedx-py -e -o sbom.json
          else
            echo "No backend dir, skipping"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Frontend audit (eslint/tsc/tests)
        run: |
          if [ -f "$FRONTEND_DIR/package.json" ]; then
            cd "$FRONTEND_DIR"
            (pnpm i || npm i)
            npx eslint . -f json -o ../eslint.json --max-warnings=0
            if [ -f "tsconfig.json" ]; then npx tsc --noEmit; fi
            (npx vitest run || npx jest --ci || echo "no tests")
            cd -
          else
            echo "No frontend dir, skipping"
          fi

      - name: Generate git metrics (90 days)
        run: python3 scripts/metrics_git.py --window-days 90 --out metrics.json

      - name: Prepare static site (public/)
        run: |
          mkdir -p public/data
          cp -f metrics.json public/data/
          [ -f coverage.json ] && cp coverage.json public/data/ || true
          [ -f pip_audit.json ] && cp pip_audit.json public/data/ || true
          [ -f bandit.json ] && cp bandit.json public/data/ || true
          [ -f sbom.json ] && cp sbom.json public/data/ || true
          [ -f eslint.json ] && cp eslint.json public/data/ || true
          cp -R dashboard/* public/

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    if: github.event_name != 'pull_request'
    needs: audit
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
