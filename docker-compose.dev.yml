# Configuración de entorno de desarrollo local
version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: facturacion-postgres
    environment:
      POSTGRES_DB: facturacion_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - facturacion-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: facturacion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - facturacion-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Adminer para gestión de base de datos
  adminer:
    image: adminer:latest
    container_name: facturacion-adminer
    ports:
      - "8080:8080"
    networks:
      - facturacion-network
    depends_on:
      - postgres

  # Redis Commander para gestión de Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: facturacion-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - facturacion-network
    depends_on:
      - redis

  # Prometheus para métricas (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: facturacion-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - facturacion-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana para visualización (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: facturacion-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - facturacion-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  facturacion-network:
    driver: bridge
    name: facturacion-network
