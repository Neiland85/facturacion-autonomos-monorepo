#!/bin/bash

# Script para configurar URLs reales de servicios externos
# Uso: ./setup-service-urls.sh

echo "üîó Configuraci√≥n de URLs de Servicios Externos"
echo "=============================================="
echo ""

# Verificar que GitHub CLI est√© instalado y autenticado
if ! command -v gh &> /dev/null; then
    echo "‚ùå GitHub CLI no est√° instalado"
    exit 1
fi

if ! gh auth status &> /dev/null; then
    echo "‚ùå No est√°s autenticado en GitHub CLI"
    exit 1
fi

echo "‚úÖ GitHub CLI est√° configurado"

# Funci√≥n para configurar URL de servicio
set_service_url() {
    local secret_name=$1
    local service_type=$2
    local environment=$3
    local example_url=$4

    echo ""
    echo "üîß Configuraci√≥n de $secret_name ($service_type - $environment)"
    echo "üìù URL de ejemplo: $example_url"
    echo ""

    read -p "¬øQuieres usar la URL de ejemplo? (y/n): " use_example

    if [ "$use_example" = "y" ] || [ "$use_example" = "Y" ]; then
        echo "$example_url" | gh secret set "$secret_name"
        echo "‚úÖ Configurado con URL de ejemplo"
    else
        read -p "Ingresa la URL real de $service_type para $environment: " real_url
        if [ -n "$real_url" ]; then
            echo "$real_url" | gh secret set "$secret_name"
            echo "‚úÖ Configurado con URL personalizada"
        else
            echo "‚ö†Ô∏è  No se configur√≥ ninguna URL"
        fi
    fi
}

echo "üêò Configuraci√≥n de PostgreSQL URLs"
echo "==================================="

set_service_url "DATABASE_URL_DEV" "PostgreSQL" "desarrollo" "postgresql://neondb_owner:xxxxxxxxxxxx@ep-cool-mode-a5m4r6zq.us-east-2.aws.neon.tech/neondb?sslmode=require"

set_service_url "DATABASE_URL_STAGING" "PostgreSQL" "staging" "postgresql://postgres.xxxxxxxxxxxxxx:xxxxxxxxxxxx@aws-0-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require"

set_service_url "DATABASE_URL_PROD" "PostgreSQL" "producci√≥n" "postgresql://postgres:xxxxxxxxxxxx@containers-us-west-1.railway.app:5432/railway?sslmode=require"

echo ""
echo "üî¥ Configuraci√≥n de Redis URLs"
echo "=============================="

set_service_url "REDIS_URL_DEV" "Redis" "desarrollo" "redis://default:xxxxxxxxxxxx@usw1-famous-termite-12345.upstash.io:5432"

set_service_url "REDIS_URL_STAGING" "Redis" "staging" "redis://default:xxxxxxxxxxxx@usw1-cool-rabbit-12345.upstash.io:5432"

set_service_url "REDIS_URL_PROD" "Redis" "producci√≥n" "redis://h:xxxxxxxxxxxx@usw1-actual-termite-12345.ec2.cloud.redislabs.com:12345"

echo ""
echo "‚úÖ ¬°Configuraci√≥n completada!"
echo ""
echo "üìã Servicios recomendados:"
echo ""
echo "üêò PostgreSQL:"
echo "  ‚Ä¢ Desarrollo: Neon (https://neon.tech) - Gratuito"
echo "  ‚Ä¢ Staging: Supabase (https://supabase.com) - Gratuito"
echo "  ‚Ä¢ Producci√≥n: Railway (https://railway.app) - $5/mes"
echo ""
echo "üî¥ Redis:"
echo "  ‚Ä¢ Desarrollo: Upstash (https://upstash.com) - Gratuito"
echo "  ‚Ä¢ Staging: Upstash (https://upstash.com) - Gratuito"
echo "  ‚Ä¢ Producci√≥n: Redis Labs (https://redis.com) - $15/mes"
echo ""
echo "üéØ Pr√≥ximos pasos:"
echo "1. Crea cuentas en los servicios recomendados"
echo "2. Obt√©n las URLs de conexi√≥n reales"
echo "3. Ejecuta este script nuevamente para actualizar las URLs"
echo "4. Haz merge del PR para activar los despliegues"