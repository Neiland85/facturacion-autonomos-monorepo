# Railway Multi-Service Configuration for Security System
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Enable corepack and yarn
RUN corepack enable && corepack prepare yarn@4.9.2 --activate

# Copy package files
COPY package.json yarn.lock* ./
COPY apps/web/package.json ./apps/web/
COPY packages/security/package.json ./packages/security/
COPY packages/types/package.json ./packages/types/

# Install dependencies
RUN yarn install --immutable

# Build the security system and application
FROM base AS builder
WORKDIR /app

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy source code
COPY . .

# Enable yarn
RUN corepack enable && corepack prepare yarn@4.9.2 --activate

# Build security system first, then web app
RUN yarn workspace @facturacion/security build
RUN yarn workspace @facturacion/web build

# Production image
FROM base AS runner
WORKDIR /app

# Create system user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/apps/web/.next/standalone ./
COPY --from=builder /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder /app/apps/web/public ./apps/web/public

# Set permissions
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 3000

# Environment variables
ENV NODE_ENV=production
ENV HOSTNAME="0.0.0.0"
ENV PORT=3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Start the application
CMD ["node", "apps/web/server.js"]
