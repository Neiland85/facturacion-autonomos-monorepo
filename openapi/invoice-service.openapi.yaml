openapi: 3.0.3
info:
  title: Invoice Service API
  description: |
    Servicio de gesti√≥n de facturas con integraci√≥n Prisma y validaciones fiscales

    ## Caracter√≠sticas principales:
    - Gesti√≥n completa de facturas
    - Validaci√≥n autom√°tica de datos fiscales
    - Integraci√≥n con base de datos Prisma
    - C√°lculos autom√°ticos de totales
    - Estados de facturas (borrador, emitida, pagada, etc.)
    - B√∫squeda y filtrado avanzado

  version: 1.0.0
  contact:
    name: Equipo de Desarrollo
    email: dev@facturacion-autonomos.com

servers:
  - url: http://localhost:3001/api
    description: Invoice Service - Desarrollo
  - url: https://invoices.facturacion-autonomos.com/api
    description: Invoice Service - Producci√≥n

security:
  - bearerAuth: []

paths:
  /invoices:
    get:
      summary: üìã Listar facturas
      description: Obtiene una lista paginada de facturas con filtros opcionales
      tags: [üìÑ Facturas]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N√∫mero de p√°gina
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Elementos por p√°gina
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, sent, paid, cancelled]
          description: Estado de la factura
        - name: clientId
          in: query
          schema:
            type: string
            format: uuid
          description: ID del cliente
        - name: startDate
          in: query
          schema:
            type: string
            format: date
          description: Fecha de inicio (YYYY-MM-DD)
        - name: endDate
          in: query
          schema:
            type: string
            format: date
          description: Fecha de fin (YYYY-MM-DD)
      responses:
        200:
          description: ‚úÖ Lista de facturas obtenida
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        401:
          $ref: '#/components/responses/UnauthorizedError'

    post:
      summary: ‚ûï Crear nueva factura
      description: Crea una nueva factura con validaci√≥n completa
      tags: [üìÑ Facturas]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceInput'
      responses:
        201:
          description: ‚úÖ Factura creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Invoice'
                  message:
                    type: string
                    example: 'Factura creada exitosamente'
        400:
          $ref: '#/components/responses/ValidationError'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /invoices/{id}:
    get:
      summary: üìÑ Obtener factura por ID
      description: Obtiene los detalles completos de una factura espec√≠fica
      tags: [üìÑ Facturas]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID √∫nico de la factura
      responses:
        200:
          description: ‚úÖ Factura encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Invoice'
        404:
          description: ‚ùå Factura no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 'INVOICE_NOT_FOUND'
                      message:
                        type: string
                        example: 'La factura solicitada no existe'
        401:
          $ref: '#/components/responses/UnauthorizedError'

    put:
      summary: ‚úèÔ∏è Actualizar factura
      description: Actualiza los datos de una factura existente
      tags: [üìÑ Facturas]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID √∫nico de la factura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
      responses:
        200:
          description: ‚úÖ Factura actualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Invoice'
                  message:
                    type: string
                    example: 'Factura actualizada exitosamente'
        404:
          $ref: '#/components/responses/NotFoundError'
        400:
          $ref: '#/components/responses/ValidationError'
        401:
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      summary: üóëÔ∏è Eliminar factura
      description: Elimina una factura (solo si est√° en estado borrador)
      tags: [üìÑ Facturas]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID √∫nico de la factura
      responses:
        200:
          description: ‚úÖ Factura eliminada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Factura eliminada exitosamente'
        400:
          description: ‚ùå No se puede eliminar
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 'CANNOT_DELETE_INVOICE'
                      message:
                        type: string
                        example: 'Solo se pueden eliminar facturas en estado borrador'
        404:
          $ref: '#/components/responses/NotFoundError'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /invoices/{id}/status:
    put:
      summary: üîÑ Cambiar estado de factura
      description: Cambia el estado de una factura (enviar, pagar, cancelar)
      tags: [üìÑ Facturas]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID √∫nico de la factura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [sent, paid, cancelled]
                  description: Nuevo estado de la factura
                notes:
                  type: string
                  description: Notas adicionales sobre el cambio
      responses:
        200:
          description: ‚úÖ Estado actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Invoice'
                  message:
                    type: string
                    example: 'Estado de factura actualizado'
        400:
          $ref: '#/components/responses/ValidationError'
        404:
          $ref: '#/components/responses/NotFoundError'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /invoices/stats:
    get:
      summary: üìä Estad√≠sticas de facturas
      description: Obtiene estad√≠sticas generales del usuario
      tags: [üìÑ Facturas]
      responses:
        200:
          description: ‚úÖ Estad√≠sticas obtenidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      totalInvoices:
                        type: integer
                        example: 150
                      totalAmount:
                        type: number
                        format: float
                        example: 45678.90
                      paidAmount:
                        type: number
                        format: float
                        example: 34567.80
                      pendingAmount:
                        type: number
                        format: float
                        example: 11111.10
                      byStatus:
                        type: object
                        properties:
                          draft:
                            type: integer
                            example: 5
                          sent:
                            type: integer
                            example: 25
                          paid:
                            type: integer
                            example: 115
                          cancelled:
                            type: integer
                            example: 5
        401:
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Invoice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '123e4567-e89b-12d3-a456-426614174000'
        invoiceNumber:
          type: string
          example: 'INV-2024-001'
        clientId:
          type: string
          format: uuid
          example: '456e7890-e89b-12d3-a456-426614174001'
        client:
          $ref: '#/components/schemas/Client'
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
        subtotal:
          type: number
          format: float
          example: 1000.00
        taxAmount:
          type: number
          format: float
          example: 210.00
        total:
          type: number
          format: float
          example: 1210.00
        status:
          type: string
          enum: [draft, sent, paid, cancelled]
          example: 'sent'
        issueDate:
          type: string
          format: date
          example: '2024-01-15'
        dueDate:
          type: string
          format: date
          example: '2024-02-14'
        notes:
          type: string
          example: 'Factura por servicios de consultor√≠a'
        createdAt:
          type: string
          format: date-time
          example: '2024-01-15T10:30:00Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-01-15T10:30:00Z'

    InvoiceInput:
      type: object
      required:
        - clientId
        - items
      properties:
        clientId:
          type: string
          format: uuid
          example: '456e7890-e89b-12d3-a456-426614174001'
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemInput'
          minItems: 1
        issueDate:
          type: string
          format: date
          example: '2024-01-15'
        dueDate:
          type: string
          format: date
          example: '2024-02-14'
        notes:
          type: string
          example: 'Factura por servicios de consultor√≠a'

    InvoiceUpdate:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemInput'
        issueDate:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        notes:
          type: string

    InvoiceItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '789e0123-e89b-12d3-a456-426614174002'
        description:
          type: string
          example: 'Desarrollo de aplicaci√≥n web'
        quantity:
          type: number
          format: float
          example: 10
        unitPrice:
          type: number
          format: float
          example: 100.00
        taxRate:
          type: number
          format: float
          example: 21.00
        total:
          type: number
          format: float
          example: 1210.00

    InvoiceItemInput:
      type: object
      required:
        - description
        - quantity
        - unitPrice
        - taxRate
      properties:
        description:
          type: string
          example: 'Desarrollo de aplicaci√≥n web'
        quantity:
          type: number
          format: float
          minimum: 0.01
          example: 10
        unitPrice:
          type: number
          format: float
          minimum: 0
          example: 100.00
        taxRate:
          type: number
          format: float
          minimum: 0
          maximum: 100
          example: 21.00

    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '456e7890-e89b-12d3-a456-426614174001'
        name:
          type: string
          example: 'Cliente S.L.'
        email:
          type: string
          format: email
          example: 'cliente@empresa.com'
        taxId:
          type: string
          example: 'B12345678'
        address:
          type: string
          example: 'Calle Mayor 123, Madrid'

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        totalPages:
          type: integer
          example: 8

  responses:
    UnauthorizedError:
      description: No autorizado - Token inv√°lido o expirado
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: 'UNAUTHORIZED'
                  message:
                    type: string
                    example: 'Token de acceso inv√°lido'

    ValidationError:
      description: Datos de entrada inv√°lidos
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: 'VALIDATION_ERROR'
                  message:
                    type: string
                    example: 'Los datos proporcionados no cumplen con los requisitos'
                  details:
                    type: object
                    additionalProperties: true

    NotFoundError:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: 'NOT_FOUND'
                  message:
                    type: string
                    example: 'El recurso solicitado no existe'
